# Generated traefik.toml by confd {{datetime}}
debug = {{getv "/debug" "false"}}
logLevel = "{{getv "/log/level" "INFO"}}"
InsecureSkipVerify = {{getv "/insecure/skip" "false"}}
defaultEntryPoints = [{{getv "/default/entrypoints" "\"http\""}}]

[entryPoints]
  [entryPoints.http]
  address = "{{getv "/http/address" ""}}:{{getv "/http/port" "80"}}"
  compress = {{getv "/http/compress" "true"}}
{{if exists "/https/enable"}}{{if eq (getv "/https/enable") "true"}}
  [entryPoints.https]
  address = "{{getv "/https/address" ""}}:{{getv "/https/port" "443"}}"
  compress = {{getv "/https/compress" "true"}}
{{end}}{{end}}

{{if exists "/ping/enable"}}{{if eq (getv "/ping/enable") "true"}}
  [entryPoints.ping]
  address = "{{getv "/ping/address" ""}}:{{getv "/ping/port" "8082"}}"
{{end}}{{end}}

{{if exists "/api/enable"}}{{if eq (getv "/api/enable") "true"}}
  [entryPoints.api]
  address = "{{getv "/api/address" ""}}:{{getv "/api/port" "8083"}}"
  compress = {{getv "/api/compress" "false"}}
{{end}}{{end}}

{{if exists "/ping/enable"}}{{if eq (getv "/ping/enable") "true"}}
[ping]
entryPoint = "ping"
{{end}}{{end}}

{{if exists "/api/enable"}}{{if eq (getv "/api/enable") "true"}}
[api]
entryPoint = "api"
{{end}}{{end}}

{{if exists "/marathon/enable"}}
[marathon]
# Marathon server endpoint.
# You can also specify multiple endpoint for Marathon:
# endpoint = "http://10.241.1.71:8080,10.241.1.72:8080,10.241.1.73:8080"
#
endpoint = "{{getv "/marathon/endpoint" "http://marathon.mesos:8080"}}"
watch = {{getv "/marathon/watch" "true"}}

# Default domain used.
# Can be overridden by setting the "traefik.domain" label on an application.
#
# Required
#
domain = "{{getv "/marathon/domain" "marathon.localhost"}}"

# Expose Marathon apps by default in Traefik.
#
# Optional
# Default: true
#
exposedByDefault = {{getv "/marathon/expose" "true"}}

# Convert Marathon groups to subdomains.
# Default behavior: /foo/bar/myapp => foo-bar-myapp.{defaultDomain}
# with groupsAsSubDomains enabled: /foo/bar/myapp => myapp.bar.foo.{defaultDomain}
#
# Optional
# Default: false
#
groupsAsSubDomains = {{getv "/marathon/groups/as/subdomains" "false"}}

# Enable compatibility with marathon-lb labels.
#
# Optional
# Default: false
#
marathonLBCompatibility = {{getv "/marathon/lb/compatibility" "false"}}

# Enable Marathon basic authentication.
#
# Optional
#
#    [marathon.basic]
#    httpBasicAuthUser = "foo"
#    httpBasicPassword = "bar"

# TLS client configuration. https://golang.org/pkg/crypto/tls/#Config
#
# Optional
#
#    [marathon.TLS]
#    CA = "/etc/ssl/ca.crt"
#    Cert = "/etc/ssl/marathon.cert"
#    Key = "/etc/ssl/marathon.key"
#    InsecureSkipVerify = true

{{if exists "/marathon/dcos/token"}}
# DCOSToken for DCOS environment.
# This will override the Authorization header.
#
# Optional

dcosToken = "{{getv "/marathon/dcos/token"}}"
{{end}}
# Override DialerTimeout.
# Amount of time to allow the Marathon provider to wait to open a TCP connection
# to a Marathon master.
# Can be provided in a format supported by [time.ParseDuration](https://golang.org/pkg/time/#ParseDuration) or as raw
# values (digits).
# If no units are provided, the value is parsed assuming seconds.
#
# Optional
# Default: "60s"
#
dialerTimeout = "{{getv "/marathon/dialer/timeout" "60s"}}"

# Set the TCP Keep Alive interval for the Marathon HTTP Client.
# Can be provided in a format supported by [time.ParseDuration](https://golang.org/pkg/time/#ParseDuration) or as raw
# values (digits).
# If no units are provided, the value is parsed assuming seconds.
#
# Optional
# Default: "10s"
#
keepAlive = "{{getv "/marathon/keep/alive" "60s"}}"

# By default, a task's IP address (as returned by the Marathon API) is used as
# backend server if an IP-per-task configuration can be found; otherwise, the
# name of the host running the task is used.
# The latter behavior can be enforced by enabling this switch.
#
# Optional
# Default: false
#
forceTaskHostname = {{getv "/marathon/force/task/hostname" "false"}}

# Applications may define readiness checks which are probed by Marathon during
# deployments periodically and the results exposed via the API.
# Enabling the following parameter causes Traefik to filter out tasks
# whose readiness checks have not succeeded.
# Note that the checks are only valid at deployment times.
# See the Marathon guide for details.
#
# Optional
# Default: false
#
respectReadinessChecks = {{getv "/marathon/respect/readiness/checks" "false"}}
{{end}}
# Metrics definition
[metrics]

{{if exists "/prometheus/entrypoint"}}
  # To enable Traefik to export internal metrics to Prometheus
  [metrics.prometheus]

    # Name of the related entry point
    #
    # Optional
    # Default: "traefik"
    #
    entryPoint = "{{getv "/prometheus/entrypoint"}}"

    # Buckets for latency metrics
    #
    # Optional
    # Default: [0.1, 0.3, 1.2, 5]
    #
    buckets = [{{getv "/prometheus/buckets" "0.1,0.3,1.2,5.0"}}]
{{end}}
{{if exists "/file/name"}}
[file]
filename = "{{getv "/file/name"}}"
watch = {{getv "/file/watch" "true"}}
{{end}}
